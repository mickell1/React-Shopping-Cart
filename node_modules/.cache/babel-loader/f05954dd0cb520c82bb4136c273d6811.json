{"ast":null,"code":"var _jsxFileName = \"/Users/mickellcrawford/Desktop/Tech Tasks/ui-products-test/src/App.jsx\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from './components/Footer/Footer';\nimport './App.scss';\nimport Product from './components/Product/Product';\nimport products from './data/products';\n\nvar App = function App(props) {\n  var products = props.products;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Products\"), React.createElement(\"div\", {\n    className: \"products-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, products.map(function (product) {\n    return React.createElement(Product, {\n      key: product.productId,\n      product: product,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nApp.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object)\n};\nApp.defaultProps = {\n  products: products // import React, { Component } from \"react\";\n  // import PropTypes from 'prop-types'\n  // import ReactDOM from \"react-dom\";\n  // import Header from \"./components/Header\";\n  // import Products from \"./components/Products\";\n  // import Footer from \"./components/Footer\";\n  // import QuickView from \"./components/QuickView\";\n  // import productsData from './data/productsData';\n  // import \"./scss/style.scss\";\n  // class App extends Component {\n  //   constructor() {\n  //     super();\n  //     this.state = {\n  //       products: [],\n  //       cart: [],\n  //       totalItems: 0,\n  //       totalAmount: 0,\n  //       term: \"\",\n  //       category: \"\",\n  //       cartBounce: false,\n  //       quantity: 1,\n  //       quickViewProduct: {},\n  //       modalActive: false\n  //     };\n  //     this.handleSearch = this.handleSearch.bind(this);\n  //     this.handleMobileSearch = this.handleMobileSearch.bind(this);\n  //     this.handleCategory = this.handleCategory.bind(this);\n  //     this.handleAddToCart = this.handleAddToCart.bind(this);\n  //     this.sumTotalItems = this.sumTotalItems.bind(this);\n  //     this.sumTotalAmount = this.sumTotalAmount.bind(this);\n  //     this.checkProduct = this.checkProduct.bind(this);\n  //     this.updateQuantity = this.updateQuantity.bind(this);\n  //     this.handleRemoveProduct = this.handleRemoveProduct.bind(this);\n  //     this.openModal = this.openModal.bind(this);\n  //     this.closeModal = this.closeModal.bind(this);\n  //   }\n  //   // Fetch Initial Set of Products from external API\n  //   getProducts() {\n  //     // let url = productsData\n  //     // axios.get(url).then(response => {\n  //     //   console.log(response)\n  //     //   this.setState({\n  //     //     products: response.data\n  //     //   });\n  //     // });\n  //     console.log(productsData)\n  //     this.setState({\n  //       products: productsData\n  //     });\n  //   }\n  //   componentWillMount() {\n  //     this.getProducts();\n  //   }\n  //   // Search by Keyword\n  //   handleSearch(event) {\n  //     this.setState({ term: event.target.value });\n  //   }\n  //   // Mobile Search Reset\n  //   handleMobileSearch() {\n  //     this.setState({ term: \"\" });\n  //   }\n  //   // Filter by Category\n  //   handleCategory(event) {\n  //     this.setState({ category: event.target.value });\n  //     console.log(this.state.category);\n  //   }\n  //   // Add to Cart\n  //   handleAddToCart(selectedProducts) {\n  //     let cartItem = this.state.cart;\n  //     let productID = selectedProducts.productId;\n  //     let productQty = selectedProducts.quantity;\n  //     if (this.checkProduct(productID)) {\n  //       console.log(\"hi\");\n  //       let index = cartItem.findIndex(x => x.productId == productID);\n  //       cartItem[index].quantity =\n  //         Number(cartItem[index].quantity) + Number(productQty);\n  //       this.setState({\n  //         cart: cartItem\n  //       });\n  //     } else {\n  //       cartItem.push(selectedProducts);\n  //     }\n  //     this.setState({\n  //       cart: cartItem,\n  //       cartBounce: true\n  //     });\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           cartBounce: false,\n  //           quantity: 1\n  //         });\n  //         console.log(this.state.quantity);\n  //         console.log(this.state.cart);\n  //       }.bind(this),\n  //       1000\n  //     );\n  //     this.sumTotalItems(this.state.cart);\n  //     this.sumTotalAmount(this.state.cart);\n  //   }\n  //   handleRemoveProduct(id, e) {\n  //     let cart = this.state.cart;\n  //     let index = cart.findIndex(x => x.productId == id);\n  //     cart.splice(index, 1);\n  //     this.setState({\n  //       cart: cart\n  //     });\n  //     this.sumTotalItems(this.state.cart);\n  //     this.sumTotalAmount(this.state.cart);\n  //     e.preventDefault();\n  //   }\n  //   checkProduct(productID) {\n  //     let cart = this.state.cart;\n  //     return cart.some(function(item) {\n  //       return item.productId === productID;\n  //     });\n  //   }\n  //   sumTotalItems() {\n  //     let total = 0;\n  //     let cart = this.state.cart;\n  //     total = cart.length;\n  //     this.setState({\n  //       totalItems: total\n  //     });\n  //   }\n  //   sumTotalAmount() {\n  //     let total = 0;\n  //     let cart = this.state.cart;\n  //     for (var i = 0; i < cart.length; i++) {\n  //       total += cart[i].price * parseInt(cart[i].quantity);\n  //     }\n  //     this.setState({\n  //       totalAmount: total\n  //     });\n  //   }\n  //   //Reset Quantity\n  //   updateQuantity(qty) {\n  //     console.log(\"quantity added...\");\n  //     this.setState({\n  //       quantity: qty\n  //     });\n  //   }\n  //   // Open Modal\n  //   openModal(product) {\n  //     this.setState({\n  //       quickViewProduct: product,\n  //       modalActive: true\n  //     });\n  //   }\n  //   // Close Modal\n  //   closeModal() {\n  //     this.setState({\n  //       modalActive: false\n  //     });\n  //   }\n  //   render() {\n  //     return (\n  //       <div className=\"container\">\n  //         <Header\n  //           cartBounce={this.state.cartBounce}\n  //           total={this.state.totalAmount}\n  //           totalItems={this.state.totalItems}\n  //           cartItems={this.state.cart}\n  //           removeProduct={this.handleRemoveProduct}\n  //           handleSearch={this.handleSearch}\n  //           handleMobileSearch={this.handleMobileSearch}\n  //           handleCategory={this.handleCategory}\n  //           categoryTerm={this.state.category}\n  //           updateQuantity={this.updateQuantity}\n  //           productQuantity={this.state.moq}\n  //         />\n  //         <Products\n  //           productsList={this.state.products}\n  //           searchTerm={this.state.term}\n  //           addToCart={this.handleAddToCart}\n  //           productQuantity={this.state.quantity}\n  //           updateQuantity={this.updateQuantity}\n  //           openModal={this.openModal}\n  //         />\n  //         <Footer />\n  //         {/* <QuickView\n  //           product={this.state.quickViewProduct}\n  //           openModal={this.state.modalActive}\n  //           closeModal={this.closeModal}\n  //         /> */}\n  //       </div>\n  //     );\n  //   }\n  // }\n  // App.propTypes = {\n  //   products: PropTypes.arrayOf(PropTypes.object),\n  // };\n  // App.defaultProps = {\n  //   products: this.products,\n  // }\n\n};\nexport default App;","map":{"version":3,"sources":["/Users/mickellcrawford/Desktop/Tech Tasks/ui-products-test/src/App.jsx"],"names":["React","Fragment","PropTypes","Footer","Product","products","App","props","map","product","productId","propTypes","arrayOf","object","defaultProps"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAAA,MACXF,QADW,GACEE,KADF,CACXF,QADW;AAEnB,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACG,GAAT,CAAa,UAAAC,OAAO;AAAA,WAAI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,SAAtB;AAAiC,MAAA,OAAO,EAAED,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAApB,CADH,CAFF,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAXD;;AAaAH,GAAG,CAACK,SAAJ,GAAgB;AACdN,EAAAA,QAAQ,EAAEH,SAAS,CAACU,OAAV,CAAkBV,SAAS,CAACW,MAA5B;AADI,CAAhB;AAIAP,GAAG,CAACQ,YAAJ,GAAmB;AACjBT,EAAAA,QAAQ,EAARA,QADiB,CAInmB,CAAnB;AAgNA,eAAeC,GAAf","sourcesContent":["\nimport React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Footer from './components/Footer/Footer'\n\nimport './App.scss';\nimport Product from './components/Product/Product'\nimport products from './data/products'\n\nconst App = props => {\n  const { products } = props\n  return (\n    <Fragment>\n      <h1>Products</h1>\n      <div className='products-container'>\n        {products.map(product => <Product key={product.productId} product={product} />)}\n      </div>\n      <Footer />\n    </Fragment>\n  )\n}\n\nApp.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object),\n}\n\nApp.defaultProps = {\n  products,\n}\n\n// import React, { Component } from \"react\";\n// import PropTypes from 'prop-types'\n// import ReactDOM from \"react-dom\";\n// import Header from \"./components/Header\";\n// import Products from \"./components/Products\";\n// import Footer from \"./components/Footer\";\n// import QuickView from \"./components/QuickView\";\n// import productsData from './data/productsData';\n// import \"./scss/style.scss\";\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       products: [],\n//       cart: [],\n//       totalItems: 0,\n//       totalAmount: 0,\n//       term: \"\",\n//       category: \"\",\n//       cartBounce: false,\n//       quantity: 1,\n//       quickViewProduct: {},\n//       modalActive: false\n//     };\n//     this.handleSearch = this.handleSearch.bind(this);\n//     this.handleMobileSearch = this.handleMobileSearch.bind(this);\n//     this.handleCategory = this.handleCategory.bind(this);\n//     this.handleAddToCart = this.handleAddToCart.bind(this);\n//     this.sumTotalItems = this.sumTotalItems.bind(this);\n//     this.sumTotalAmount = this.sumTotalAmount.bind(this);\n//     this.checkProduct = this.checkProduct.bind(this);\n//     this.updateQuantity = this.updateQuantity.bind(this);\n//     this.handleRemoveProduct = this.handleRemoveProduct.bind(this);\n//     this.openModal = this.openModal.bind(this);\n//     this.closeModal = this.closeModal.bind(this);\n//   }\n//   // Fetch Initial Set of Products from external API\n//   getProducts() {\n//     // let url = productsData\n//     // axios.get(url).then(response => {\n//     //   console.log(response)\n//     //   this.setState({\n//     //     products: response.data\n//     //   });\n//     // });\n//     console.log(productsData)\n//     this.setState({\n//       products: productsData\n//     });\n//   }\n//   componentWillMount() {\n//     this.getProducts();\n//   }\n\n//   // Search by Keyword\n//   handleSearch(event) {\n//     this.setState({ term: event.target.value });\n//   }\n//   // Mobile Search Reset\n//   handleMobileSearch() {\n//     this.setState({ term: \"\" });\n//   }\n//   // Filter by Category\n//   handleCategory(event) {\n//     this.setState({ category: event.target.value });\n//     console.log(this.state.category);\n//   }\n//   // Add to Cart\n//   handleAddToCart(selectedProducts) {\n//     let cartItem = this.state.cart;\n//     let productID = selectedProducts.productId;\n//     let productQty = selectedProducts.quantity;\n//     if (this.checkProduct(productID)) {\n//       console.log(\"hi\");\n//       let index = cartItem.findIndex(x => x.productId == productID);\n//       cartItem[index].quantity =\n//         Number(cartItem[index].quantity) + Number(productQty);\n//       this.setState({\n//         cart: cartItem\n//       });\n//     } else {\n//       cartItem.push(selectedProducts);\n//     }\n//     this.setState({\n//       cart: cartItem,\n//       cartBounce: true\n//     });\n//     setTimeout(\n//       function() {\n//         this.setState({\n//           cartBounce: false,\n//           quantity: 1\n//         });\n//         console.log(this.state.quantity);\n//         console.log(this.state.cart);\n//       }.bind(this),\n//       1000\n//     );\n//     this.sumTotalItems(this.state.cart);\n//     this.sumTotalAmount(this.state.cart);\n//   }\n//   handleRemoveProduct(id, e) {\n//     let cart = this.state.cart;\n//     let index = cart.findIndex(x => x.productId == id);\n//     cart.splice(index, 1);\n//     this.setState({\n//       cart: cart\n//     });\n//     this.sumTotalItems(this.state.cart);\n//     this.sumTotalAmount(this.state.cart);\n//     e.preventDefault();\n//   }\n//   checkProduct(productID) {\n//     let cart = this.state.cart;\n//     return cart.some(function(item) {\n//       return item.productId === productID;\n//     });\n//   }\n//   sumTotalItems() {\n//     let total = 0;\n//     let cart = this.state.cart;\n//     total = cart.length;\n//     this.setState({\n//       totalItems: total\n//     });\n//   }\n//   sumTotalAmount() {\n//     let total = 0;\n//     let cart = this.state.cart;\n//     for (var i = 0; i < cart.length; i++) {\n//       total += cart[i].price * parseInt(cart[i].quantity);\n//     }\n//     this.setState({\n//       totalAmount: total\n//     });\n//   }\n\n//   //Reset Quantity\n//   updateQuantity(qty) {\n//     console.log(\"quantity added...\");\n//     this.setState({\n//       quantity: qty\n//     });\n//   }\n//   // Open Modal\n//   openModal(product) {\n//     this.setState({\n//       quickViewProduct: product,\n//       modalActive: true\n//     });\n//   }\n//   // Close Modal\n//   closeModal() {\n//     this.setState({\n//       modalActive: false\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <Header\n//           cartBounce={this.state.cartBounce}\n//           total={this.state.totalAmount}\n//           totalItems={this.state.totalItems}\n//           cartItems={this.state.cart}\n//           removeProduct={this.handleRemoveProduct}\n//           handleSearch={this.handleSearch}\n//           handleMobileSearch={this.handleMobileSearch}\n//           handleCategory={this.handleCategory}\n//           categoryTerm={this.state.category}\n//           updateQuantity={this.updateQuantity}\n//           productQuantity={this.state.moq}\n//         />\n//         <Products\n//           productsList={this.state.products}\n//           searchTerm={this.state.term}\n//           addToCart={this.handleAddToCart}\n//           productQuantity={this.state.quantity}\n//           updateQuantity={this.updateQuantity}\n//           openModal={this.openModal}\n//         />\n//         <Footer />\n//         {/* <QuickView\n//           product={this.state.quickViewProduct}\n//           openModal={this.state.modalActive}\n//           closeModal={this.closeModal}\n//         /> */}\n//       </div>\n//     );\n//   }\n// }\n\n// App.propTypes = {\n//   products: PropTypes.arrayOf(PropTypes.object),\n// };\n  \n// App.defaultProps = {\n//   products: this.products,\n// }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
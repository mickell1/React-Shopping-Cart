// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImageCarousel should render the ImageCarousel Component correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ImageCarousel
    clear={[MockFunction]}
    componentDidMount={[MockFunction]}
    componentWillUnmount={[MockFunction]}
    fadeImages={[MockFunction]}
    imageAltText="Test Text"
    images={
      Array [
        "test",
        "test2",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <div
            className=""
          >
            <img
              alt="Test Text"
              src="test"
            />
          </div>,
          <div
            className=""
          >
            <img
              alt="Test Text"
              src="test2"
            />
          </div>,
        ],
        <div>
          <div
            className="undefined"
          />
          <div
            className=""
          />
        </div>,
      ],
      "className": undefined,
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="Test Text"
            src="test"
          />,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "Test Text",
            "src": "test",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="Test Text"
            src="test2"
          />,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "Test Text",
            "src": "test2",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="undefined"
            />,
            <div
              className=""
            />,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "dot-0",
            "nodeType": "host",
            "props": Object {
              "className": "undefined",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "dot-1",
            "nodeType": "host",
            "props": Object {
              "className": "",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <div
              className=""
            >
              <img
                alt="Test Text"
                src="test"
              />
            </div>,
            <div
              className=""
            >
              <img
                alt="Test Text"
                src="test2"
              />
            </div>,
          ],
          <div>
            <div
              className="undefined"
            />
            <div
              className=""
            />
          </div>,
        ],
        "className": undefined,
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="Test Text"
              src="test"
            />,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "Test Text",
              "src": "test",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="Test Text"
              src="test2"
            />,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "Test Text",
              "src": "test2",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="undefined"
              />,
              <div
                className=""
              />,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "dot-0",
              "nodeType": "host",
              "props": Object {
                "className": "undefined",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "dot-1",
              "nodeType": "host",
              "props": Object {
                "className": "",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
